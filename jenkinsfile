pipeline {
    agent any
    environment {
        DOCKER_IMAGE = "springboot-app"
        KUBERNETES_NAMESPACE = "default"
    }
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out code...'
                checkout scm
            }
        }
        stage('Build') {
            steps {
                echo 'Building the Spring Boot application...'
                sh './mvnw clean package'
            }
        }
        stage('Docker Build') {
            steps {
                echo 'Building Docker image...'
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }
        stage('Test') {
            steps {
                echo 'Running tests...'
                sh './mvnw test'
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                echo 'Deploying to Kubernetes...'
                sh '''
                kubectl apply -f k8s/deployment.yaml
                kubectl rollout status deployment/springboot-app
                '''
            }
        }
    }
    post {
        success {
            echo 'Build and Deployment succeeded!'
            mail to: 'your-email@example.com',
                 subject: "Spring Boot Pipeline Success",
                 body: "The pipeline has completed successfully."
        }
        failure {
            echo 'Build or Deployment failed!'
            mail to: 'your-email@example.com',
                 subject: "Spring Boot Pipeline Failure",
                 body: "The pipeline encountered an issue. Please check Jenkins logs."
        }
    }
}
